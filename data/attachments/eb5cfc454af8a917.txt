# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Broken Images Page >> Verify heading text is displayed correctly
- Location: /home/runner/work/HerokuAppPlaywright/HerokuAppPlaywright/tests/broken-images.spec.js:22:5

# Error details

```
Error: browserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1161/chrome-linux/headless_shell
╔═════════════════════════════════════════════════════════════════════════╗
║ Looks like Playwright Test or Playwright was just installed or updated. ║
║ Please run the following command to download new browsers:              ║
║                                                                         ║
║     npx playwright install                                              ║
║                                                                         ║
║ <3 Playwright Team                                                      ║
╚═════════════════════════════════════════════════════════════════════════╝
```

# Test source

```ts
   1 | import { test, expect } from '@playwright/test';
   2 | import BrokenImagesPage from '../pages/broken-images.page';
   3 |
   4 | test.describe.serial('Broken Images Page', () => { //Forces tests to run sequentially in this block
   5 |     /** @type {BrokenImagesPage} */
   6 |     let brokenImagesPage;
   7 |
   8 |     test.beforeAll(async ({ browser }) => {
   9 |         const page = await browser.newPage();
  10 |         brokenImagesPage = new BrokenImagesPage(page);
  11 |     })
  12 |
  13 |     test.beforeEach(async () => {
  14 |         try {
  15 |             await brokenImagesPage.goto();
  16 |         } catch (error) {
  17 |             console.error('Error during navigation', error);
  18 |             throw error;
  19 |         }
  20 |     })
  21 |
> 22 |     test('Verify heading text is displayed correctly', async () => {
     |     ^ Error: browserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1161/chrome-linux/headless_shell
  23 |         const headingText = await brokenImagesPage.getHeadingText();
  24 |         expect(headingText).toBe('Broken Images');
  25 |     })
  26 |
  27 |     test('Verify images are present on the page', async () => {
  28 |         const imageCount = await brokenImagesPage.getImageCount();
  29 |         expect(imageCount).toBeGreaterThan(0);
  30 |     })
  31 |
  32 |     test('Verify broken images on the page', async () => {
  33 |         const brokenImages = await brokenImagesPage.getBrokenImages();
  34 |         console.log(`Broken Images Count: ${brokenImages.length}`);
  35 |         expect(brokenImages.length).toBeGreaterThan(0); // Expect at least one broken image
  36 |     })
  37 |
  38 |     //Instead of serial test.step can be used to group tests to sure broken images on page test executes only if first one passes 
  39 |
  40 |     test('Verify images and check for broken ones', async ({ page }) => {
  41 |         await test.step('Verify images are present on the page', async () => {
  42 |             const imageCount = await brokenImagesPage.getImageCount();
  43 |             expect(imageCount).toBeGreaterThan(0);
  44 |         });
  45 |
  46 |         await test.step('Verify broken images on the page', async () => {
  47 |             const brokenImages = await brokenImagesPage.getBrokenImages();
  48 |             console.log(`Broken Images Count: ${brokenImages.length}`);
  49 |             expect(brokenImages.length).toBeGreaterThan(0); // Expect at least one broken image
  50 |         });
  51 |     });
  52 |
  53 |
  54 |     test.afterAll(async () => {
  55 |         await brokenImagesPage.page.close();
  56 |     });
  57 | })
```